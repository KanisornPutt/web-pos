{"ast":null,"code":"import { ref } from \"vue\";\nimport store from \"@/store/modules/store\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const activeForm = ref(\"createFrom\");\n    const clearForms = () => {\n      storeName.value = \"\";\n      createStoreCode.value = \"\";\n      createStorePassword.value = \"\";\n      joinStoreCode.value = \"\";\n      joinStorePassword.value = \"\";\n    };\n    const toggleForms = formName => {\n      clearForms();\n      activeForm.value = formName;\n    };\n    const storeName = ref(\"\");\n    const createStoreCode = ref(\"\");\n    const createStorePassword = ref(\"\");\n    const joinStoreCode = ref(\"\");\n    const joinStorePassword = ref(\"\");\n    const createStore = async () => {\n      const createStoreRequest = {\n        name: storeName.value,\n        storeCode: createStoreCode.value,\n        password: createStorePassword.value\n      };\n      const validation = await store.dispatch(\"store/createStore\", createStoreRequest);\n      if (validation) {\n        router.push(\"/dashboard\");\n      } else {\n        alert(\"Store code has already been used\");\n        createStoreCode.value = \"\";\n        createStorePassword.value = \"\";\n      }\n    };\n    const joinStore = async () => {\n      const joinStoreRequest = {\n        storeCode: joinStoreCode.value,\n        password: joinStorePassword.value\n      };\n      const validation = await store.dispatch(\"store/joinStore\", joinStoreRequest);\n      if (validation) {\n        router.push(\"/dashboard\");\n      } else {\n        alert(\"Inccorect Store code or password\");\n        createStoreCode.value = \"\";\n        createStorePassword.value = \"\";\n      }\n    };\n    return {\n      activeForm,\n      toggleForms,\n      storeName,\n      createStoreCode,\n      createStorePassword,\n      joinStoreCode,\n      joinStorePassword,\n      createStore,\n      joinStore\n    };\n  }\n};","map":{"version":3,"names":["ref","store","useStore","useRouter","setup","router","activeForm","clearForms","storeName","value","createStoreCode","createStorePassword","joinStoreCode","joinStorePassword","toggleForms","formName","createStore","createStoreRequest","name","storeCode","password","validation","dispatch","push","alert","joinStore","joinStoreRequest"],"sources":["/Users/shane/Desktop/isc project/frontend/web-pos 3.0/src/views/StoreSetupView.vue"],"sourcesContent":["<template>\n  <div class=\"container m-5 mx-auto\">\n    <div class=\"row justify-content-center\">\n      <div\n        class=\"col-12 col-md-10 col-lg-8 p-5 border border-hide border-tertiary rounded-4\"\n      >\n        <div>\n          <form\n            v-if=\"activeForm === 'createFrom'\"\n            @submit.prevent=\"createStore\"\n          >\n            <h2>Create New Store</h2>\n            <div class=\"mb-3\">\n              <label for=\"storeName\" class=\"form-label\">Store Name</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"storeName\"\n                placeholder=\"Name of your store\"\n                required\n                v-model=\"storeName\"\n              />\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"createStoreCode\" class=\"form-label\">Store Code</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"createStoreCode\"\n                placeholder=\"Unique Code for your store, used for invitation\"\n                required\n                v-model=\"createStoreCode\"\n              />\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"createStorePassword\" class=\"form-label\"\n                >Store Password</label\n              >\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                id=\"createStorePassword\"\n                placeholder=\"Password of at least 8 characters for invitaion\"\n                required\n                v-model=\"createStorePassword\"\n              />\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary my-2\">\n              Create Store\n            </button>\n\n            <hr />\n            <p class=\"\">Not an Owner?</p>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              @click=\"toggleForms('JoinForm')\"\n            >\n              Join an Existing Store\n            </button>\n          </form>\n\n          <form v-if=\"activeForm === 'JoinForm'\" @submit.prevent=\"joinStore\">\n            <h2>Join an Existing Store</h2>\n            <div class=\"mb-3\">\n              <label for=\"joinStoreCode\" class=\"form-label\">Store Code</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"joinStoreCode\"\n                placeholder=\"Store Code given by the store admin\"\n                required\n                v-model=\"joinStoreCode\"\n              />\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"joinStorePassword\" class=\"form-label\"\n                >Store Password</label\n              >\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                id=\"joinStorePassword\"\n                placeholder=\"Store Password given by the store admin\"\n                required\n                v-model=\"joinStorePassword\"\n              />\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary my-2\">\n              Join Store\n            </button>\n            <hr />\n            <p class=\"\">Creating a New Store?</p>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              @click=\"toggleForms('createFrom')\"\n            >\n              Create a New Store\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport store from \"@/store/modules/store\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    const activeForm = ref(\"createFrom\");\n\n    const clearForms = () => {\n      storeName.value = \"\";\n      createStoreCode.value = \"\";\n      createStorePassword.value = \"\";\n      joinStoreCode.value = \"\";\n      joinStorePassword.value = \"\";\n    };\n\n    const toggleForms = (formName) => {\n      clearForms();\n      activeForm.value = formName;\n    };\n\n    const storeName = ref(\"\");\n    const createStoreCode = ref(\"\");\n    const createStorePassword = ref(\"\");\n    const joinStoreCode = ref(\"\");\n    const joinStorePassword = ref(\"\");\n\n    const createStore = async () => {\n      const createStoreRequest = {\n        name: storeName.value,\n        storeCode: createStoreCode.value,\n        password: createStorePassword.value,\n      };\n      const validation = await store.dispatch(\n        \"store/createStore\",\n        createStoreRequest\n      );\n      if (validation) {\n        router.push(\"/dashboard\");\n      } else {\n        alert(\"Store code has already been used\");\n        createStoreCode.value = \"\";\n        createStorePassword.value = \"\";\n      }\n    };\n\n    const joinStore = async () => {\n      const joinStoreRequest = {\n        storeCode: joinStoreCode.value,\n        password: joinStorePassword.value,\n      };\n      const validation = await store.dispatch(\n        \"store/joinStore\",\n        joinStoreRequest\n      );\n      if (validation) {\n        router.push(\"/dashboard\");\n      } else {\n        alert(\"Inccorect Store code or password\");\n        createStoreCode.value = \"\";\n        createStorePassword.value = \"\";\n      }\n    };\n\n    return {\n      activeForm,\n      toggleForms,\n      storeName,\n      createStoreCode,\n      createStorePassword,\n      joinStoreCode,\n      joinStorePassword,\n      createStore,\n      joinStore,\n    };\n  },\n};\n</script>\n\n<style scode>\n@media (max-width: 768px) {\n  .border-hide {\n    border: none !important; /* Hide the border */\n  }\n}\n</style>\n"],"mappings":"AA4GA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,uBAAuB;AACzC,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AACtC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMH,KAAI,GAAIC,QAAQ,CAAC,CAAC;IACxB,MAAMG,MAAK,GAAIF,SAAS,CAAC,CAAC;IAE1B,MAAMG,UAAS,GAAIN,GAAG,CAAC,YAAY,CAAC;IAEpC,MAAMO,UAAS,GAAIA,CAAA,KAAM;MACvBC,SAAS,CAACC,KAAI,GAAI,EAAE;MACpBC,eAAe,CAACD,KAAI,GAAI,EAAE;MAC1BE,mBAAmB,CAACF,KAAI,GAAI,EAAE;MAC9BG,aAAa,CAACH,KAAI,GAAI,EAAE;MACxBI,iBAAiB,CAACJ,KAAI,GAAI,EAAE;IAC9B,CAAC;IAED,MAAMK,WAAU,GAAKC,QAAQ,IAAK;MAChCR,UAAU,CAAC,CAAC;MACZD,UAAU,CAACG,KAAI,GAAIM,QAAQ;IAC7B,CAAC;IAED,MAAMP,SAAQ,GAAIR,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMU,eAAc,GAAIV,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMW,mBAAkB,GAAIX,GAAG,CAAC,EAAE,CAAC;IACnC,MAAMY,aAAY,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMa,iBAAgB,GAAIb,GAAG,CAAC,EAAE,CAAC;IAEjC,MAAMgB,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,MAAMC,kBAAiB,GAAI;QACzBC,IAAI,EAAEV,SAAS,CAACC,KAAK;QACrBU,SAAS,EAAET,eAAe,CAACD,KAAK;QAChCW,QAAQ,EAAET,mBAAmB,CAACF;MAChC,CAAC;MACD,MAAMY,UAAS,GAAI,MAAMpB,KAAK,CAACqB,QAAQ,CACrC,mBAAmB,EACnBL,kBACF,CAAC;MACD,IAAII,UAAU,EAAE;QACdhB,MAAM,CAACkB,IAAI,CAAC,YAAY,CAAC;MAC3B,OAAO;QACLC,KAAK,CAAC,kCAAkC,CAAC;QACzCd,eAAe,CAACD,KAAI,GAAI,EAAE;QAC1BE,mBAAmB,CAACF,KAAI,GAAI,EAAE;MAChC;IACF,CAAC;IAED,MAAMgB,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,MAAMC,gBAAe,GAAI;QACvBP,SAAS,EAAEP,aAAa,CAACH,KAAK;QAC9BW,QAAQ,EAAEP,iBAAiB,CAACJ;MAC9B,CAAC;MACD,MAAMY,UAAS,GAAI,MAAMpB,KAAK,CAACqB,QAAQ,CACrC,iBAAiB,EACjBI,gBACF,CAAC;MACD,IAAIL,UAAU,EAAE;QACdhB,MAAM,CAACkB,IAAI,CAAC,YAAY,CAAC;MAC3B,OAAO;QACLC,KAAK,CAAC,kCAAkC,CAAC;QACzCd,eAAe,CAACD,KAAI,GAAI,EAAE;QAC1BE,mBAAmB,CAACF,KAAI,GAAI,EAAE;MAChC;IACF,CAAC;IAED,OAAO;MACLH,UAAU;MACVQ,WAAW;MACXN,SAAS;MACTE,eAAe;MACfC,mBAAmB;MACnBC,aAAa;MACbC,iBAAiB;MACjBG,WAAW;MACXS;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}